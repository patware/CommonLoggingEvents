// Generated by a tool, do not change manually
// Tool: GenerateLibrary.ps1
// Generated Date: 

using Microsoft.Extensions.Logging;

namespace CommonLoggingLibrary.EventIds
{
  /// <summary>
  /// Internal, unrecoverable problems, like un-usable configuration, failed authentication/authorization to a service, the app can continue to work but with limited functionality, and an intervention by an admin is required.
  /// </summary>
  public static class UnrecoverableWarning
  {
    /// <summary>
    /// 501 The configuration was either unavailable, corrupt, or impossible to read.  The reason will hint IT where to look, what to look for and how to fix it.  Used in the raising of Event ID <see cref="Constants.CONFIGURATION_UNUSABLE">501</see>.  To raise this Event, use method <see cref="Configuration.Unusable"/>
    /// </summary>
    public static EventId Configuration_Unusable => new(Constants.CONFIGURATION_UNUSABLE, nameof(Configuration.ConfigurationLoggingExtensions.Configuration_Unusable));
    /// <summary>
    /// 502 A connection to an external system was attempted but the account/credential were invalid  Used in the raising of Event ID <see cref="Constants.EXTERNAL_CONNECTIONFAILEDAUTHENTICATION">502</see>.  To raise this Event, use method <see cref="External.ConnectionFailedAuthentication"/>
    /// </summary>
    public static EventId External_ConnectionFailedAuthentication => new(Constants.EXTERNAL_CONNECTIONFAILEDAUTHENTICATION, nameof(External.ExternalLoggingExtensions.External_ConnectionFailedAuthentication));
    /// <summary>
    /// 503 A connection to an external system was attempted, the account/credential is valid but doesn&#39;t have the proper rights/permissions in the target system.  Used in the raising of Event ID <see cref="Constants.EXTERNAL_CONNECTIONFAILEDAUTHORIZATION">503</see>.  To raise this Event, use method <see cref="External.ConnectionFailedAuthorization"/>
    /// </summary>
    public static EventId External_ConnectionFailedAuthorization => new(Constants.EXTERNAL_CONNECTIONFAILEDAUTHORIZATION, nameof(External.ExternalLoggingExtensions.External_ConnectionFailedAuthorization));
    /// <summary>
    /// 504 A resource wasn&#39;t found or loaded.  Used in the raising of Event ID <see cref="Constants.DEPENDENCY_RESOLUTIONFAILED">504</see>.  To raise this Event, use method <see cref="Dependency.ResolutionFailed"/>
    /// </summary>
    public static EventId Dependency_ResolutionFailed => new(Constants.DEPENDENCY_RESOLUTIONFAILED, nameof(Dependency.DependencyLoggingExtensions.Dependency_ResolutionFailed));
    /// <summary>
    /// 505   Used in the raising of Event ID <see cref="Constants.EXTERNAL_NOTIFICATIONNOTSENT">505</see>.  To raise this Event, use method <see cref="External.NotificationNotSent"/>
    /// </summary>
    public static EventId External_NotificationNotSent => new(Constants.EXTERNAL_NOTIFICATIONNOTSENT, nameof(External.ExternalLoggingExtensions.External_NotificationNotSent));
    /// <summary>
    /// 506 The validation of a configuration setting failed.  Used in the raising of Event ID <see cref="Constants.CONFIGURATION_VALUEISINVALID">506</see>.  To raise this Event, use method <see cref="Configuration.ValueIsInvalid"/>
    /// </summary>
    public static EventId Configuration_ValueIsInvalid => new(Constants.CONFIGURATION_VALUEISINVALID, nameof(Configuration.ConfigurationLoggingExtensions.Configuration_ValueIsInvalid));
  }
}

