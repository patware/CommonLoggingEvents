// Generated by a tool, do not change manually
// Tool: GenerateLibrary.ps1
// Generated Date: 

using Microsoft.Extensions.Logging;

namespace CommonLoggingLibrary.EventIds
{
  /// <summary>
  /// Normal, run, expected, operational warning like when an app is switching to InMaintenance, when a diagnostic test failed validation, or there&#39;s a mismatch of version.  - No immediate intervention required by anyone, but should be investigated anyhow.
  /// </summary>
  public static class OperationalWarning
  {
    /// <summary>
    /// 301 The application is maintenance mode.  Current requests might/will continue to be processed, but new ones will be refused.  Used in the raising of Event ID <see cref="Constants.APPLICATION_INMAINTENANCE">301</see>.  To raise this Event, use method <see cref="Application.InMaintenance"/>
    /// </summary>
    public static EventId Application_InMaintenance => new(Constants.APPLICATION_INMAINTENANCE, nameof(Application.ApplicationLoggingExtensions.Application_InMaintenance));
    /// <summary>
    /// 302 Self-Check found issues.  Used in the raising of Event ID <see cref="Constants.DIAGNOSTICS_VALIDATIONFAILED">302</see>.  To raise this Event, use method <see cref="Diagnostics.ValidationFailed"/>
    /// </summary>
    public static EventId Diagnostics_ValidationFailed => new(Constants.DIAGNOSTICS_VALIDATIONFAILED, nameof(Diagnostics.DiagnosticsLoggingExtensions.Diagnostics_ValidationFailed));
    /// <summary>
    /// 303 Health check was performed, issues were found, the application is not working at 100% capacity.  Used in the raising of Event ID <see cref="Constants.DIAGNOSTICS_HEALTHCHECKISUNHEALTHY">303</see>.  To raise this Event, use method <see cref="Diagnostics.HealthCheckIsUnhealthy"/>
    /// </summary>
    public static EventId Diagnostics_HealthCheckIsUnhealthy => new(Constants.DIAGNOSTICS_HEALTHCHECKISUNHEALTHY, nameof(Diagnostics.DiagnosticsLoggingExtensions.Diagnostics_HealthCheckIsUnhealthy));
    /// <summary>
    /// 304 The resource&#39;s version does not match the expected version.  Used in the raising of Event ID <see cref="Constants.DEPENDENCY_VERSIONMISMATCH">304</see>.  To raise this Event, use method <see cref="Dependency.VersionMismatch"/>
    /// </summary>
    public static EventId Dependency_VersionMismatch => new(Constants.DEPENDENCY_VERSIONMISMATCH, nameof(Dependency.DependencyLoggingExtensions.Dependency_VersionMismatch));
  }
}

